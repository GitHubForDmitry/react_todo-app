{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodoApp.js","App.js","index.js"],"names":["TodoItem","_ref","todo","changeTodoCompleted","destroyTodo","react_default","a","createElement","className","id","type","onClick","defaultChecked","completed","onChange","classnames","todo-completed","htmlFor","title","TodoList","todos","map","components_TodoItem","key","TodoApp","state","getTitle","event","value","target","preventDefault","_this","setState","createTodo","props","addTodo","Object","objectSpread","Date","now","_this$props","this","changeTodoCompletedAll","filterTodos","filterDescription","onSubmit","placeholder","style","display","components_TodoList","React","Component","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","prevState","concat","toConsumableArray","statusAllTodo","filter","destroyAllCompletedTodos","changeStatusAllTodos","_this2","_this$state","todosFilter","desc","components_TodoApp","length","Fragment","href","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5023a803.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, changeTodoCompleted, destroyTodo }) => (\n  <li>\n    <div className=\"view\">\n      <input\n        id={todo.id}\n        type=\"checkbox\"\n        onClick={() => changeTodoCompleted(todo.id)}\n        defaultChecked={todo.completed}\n        className=\"toggle\"\n        onChange={() => true}\n      />\n      {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n      <label\n        className={classnames({ 'todo-completed': todo.completed })}\n        htmlFor=\"todo-1\"\n      >\n        {todo.title}\n      </label>\n      <button\n        onClick={() => destroyTodo(todo.id)}\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, changeTodoCompleted, destroyTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        changeTodoCompleted={changeTodoCompleted}\n        destroyTodo={destroyTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoList from './TodoList';\n\nclass TodoApp extends React.Component {\n  state = {\n    id: 0,\n    title: '',\n    completed: false,\n  };\n\n  getTitle = (event) => {\n    const { value } = event.target;\n\n    event.preventDefault();\n    this.setState({\n      title: value,\n    });\n  }\n\n  createTodo = (event) => {\n    event.preventDefault();\n\n    this.props.addTodo({\n      ...this.state,\n      id: Date.now(),\n    });\n\n    this.setState({\n      title: '',\n    });\n  };\n\n  render() {\n    const {\n      todos,\n      changeTodoCompleted,\n      changeTodoCompletedAll,\n      destroyTodo,\n      filterTodos,\n      filterDescription,\n    } = this.props;\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.createTodo}>\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            onChange={this.getTitle}\n            value={title}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </header>\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            onClick={changeTodoCompletedAll}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n          />\n          {/* eslint-disable-next-line */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        </section>\n        <TodoList\n          todos={(filterDescription === 'active'\n          || filterDescription === 'completed')\n            ? filterTodos : todos}\n          changeTodoCompleted={changeTodoCompleted}\n          destroyTodo={destroyTodo}\n        />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n  addTodo: PropTypes.func.isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n  changeTodoCompletedAll: PropTypes.func.isRequired,\n  filterTodos: PropTypes.arrayOf(PropTypes.array).isRequired,\n  filterDescription: PropTypes.string.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      filterTodos: [],\n      filterDescription: 'all',\n      statusAllTodo: true,\n    };\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n      statusAllTodo: true,\n    }));\n  };\n\n  changeTodoCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id !== id\n          ? todo\n          : { ...todo, completed: !todo.completed }\n      )),\n    }));\n  };\n\n  destroyTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  destroyAllCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n      filterTodos: [],\n    }));\n  };\n\n  changeStatusAllTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodo,\n      })),\n      statusAllTodo: !prevState.statusAllTodo,\n    }));\n  };\n\n  render() {\n    const { todos, filterTodos, filterDescription } = this.state;\n    const todosFilter = (desc) => {\n      this.setState((prevState) => {\n        switch (desc) {\n          case 'all':\n\n            return ({\n              filterTodos: prevState.todos,\n              filterDescription: 'all',\n            });\n          case 'active':\n\n            return ({\n              filterTodos: prevState.todos\n                .filter(todo => !todo.completed),\n              filterDescription: 'active',\n            });\n          case 'completed':\n\n            return ({\n              filterTodos: prevState.todos\n                .filter(todo => todo.completed),\n              filterDescription: 'completed',\n            });\n          default:\n\n            return true;\n        }\n      });\n    };\n\n    return (\n      <section className=\"todoapp\">\n\n        <TodoApp\n          todos={todos}\n          addTodo={this.addTodo}\n          filterTodos={filterTodos}\n          filterDescription={filterDescription}\n          changeTodoCompleted={this.changeTodoCompleted}\n          changeTodoCompletedAll={this.changeStatusAllTodos}\n          destroyTodo={this.destroyTodo}\n        />\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {(todos.filter(todo => !todo.completed)).length}\n            <> items left</>\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                onClick={() => todosFilter('all')}\n                href=\"#/\"\n                className={filterDescription === 'all'\n                  ? 'selected' : ''\n                }\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                onClick={() => todosFilter('active')}\n                className={filterDescription === 'active'\n                  ? 'selected' : ''\n                }\n                href=\"#/active\"\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n\n              <a\n                onClick={() => todosFilter('completed')}\n                className={filterDescription === 'completed'\n                  ? 'selected' : ''\n                }\n                href=\"#/completed\"\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            onClick={this.destroyAllCompletedTodos}\n            type=\"button\"\n            className=\"clear-completed\"\n            style={this.state.todos\n              .some(todo => todo.completed)\n              ? { display: 'block' }\n              : { display: 'none' }}\n          >\n            Сlear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}