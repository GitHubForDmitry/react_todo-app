{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodoApp.js","App.js","index.js"],"names":["TodoItem","_ref","todo","react_default","a","createElement","className","classnames","todo-completed","completed","htmlFor","title","id","type","defaultChecked","TodoList","todos","map","components_TodoItem","key","TodoApp","state","getTitle","event","value","target","preventDefault","_this","setState","createTodo","props","addTodo","Object","objectSpread","Date","now","this","onSubmit","onChange","placeholder","style","display","components_TodoList","React","Component","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","concat","toConsumableArray","components_TodoApp","filter","length","href","onClick","destroyAllCompletedTodos","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3885d7e7.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo }) => (\n  <li>\n    <div className=\"view\">\n      <label\n        className={classnames({ 'todo-completed': todo.completed })}\n        htmlFor=\"todo-1\"\n      >\n        {todo.title}\n        <input\n          id={todo.id}\n          type=\"checkbox\"\n          defaultChecked={todo.completed}\n          className=\"toggle\"\n        />\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoList from './TodoList';\n\nclass TodoApp extends React.Component {\n  state = {\n    id: 0,\n    title: '',\n    completed: false,\n  };\n\n  getTitle = (event) => {\n    const { value } = event.target;\n\n    event.preventDefault();\n    this.setState({\n      title: value,\n    });\n  }\n\n  createTodo = (event) => {\n    event.preventDefault();\n\n    this.props.addTodo({\n      ...this.state,\n      id: Date.now(),\n    });\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const {\n      todos,\n    } = this.props;\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.createTodo}>\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            onChange={this.getTitle}\n            value={title}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </header>\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n          />\n          {/* eslint-disable-next-line */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        </section>\n        <TodoList\n          todos={todos}\n        />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n    };\n  }\n\n  addTodo = (todo) => {\n    this.setState(state => ({\n      todos: [...state.todos, todo],\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n\n        <TodoApp\n          todos={todos}\n          addTodo={this.addTodo}\n        />\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {(todos.filter(todo => !todo.completed)).length}\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button\n            onClick={this.destroyAllCompletedTodos}\n            type=\"button\"\n            className=\"clear-completed\"\n            style={this.state.todos\n              .some(todo => todo.completed)\n              ? { display: 'block' }\n              : { display: 'none' }}\n          >\n            Ð¡lear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}