{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodoApp.js","App.js","index.js"],"names":["TodoItem","_ref","todo","changeTodoCompleted","react_default","a","createElement","className","id","type","onClick","defaultChecked","completed","classnames","todo-completed","htmlFor","title","TodoList","todos","map","components_TodoItem","key","TodoApp","state","getTitle","event","value","target","preventDefault","_this","setState","createTodo","props","addTodo","Object","objectSpread","Date","now","_this$props","this","onSubmit","onChange","placeholder","style","display","components_TodoList","React","Component","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","concat","toConsumableArray","prevState","destroyAllCompletedTodos","filter","filterTodos","_this$state","components_TodoApp","length","Fragment","href","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b33d2a74.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, changeTodoCompleted }) => (\n  <li className=\"\">\n    <div className=\"view\">\n      <input\n        id={todo.id}\n        type=\"checkbox\"\n        onClick={() => changeTodoCompleted(todo.id)}\n        defaultChecked={todo.completed}\n        className=\"toggle\"\n      />\n      {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n      <label\n        className={classnames({ 'todo-completed': todo.completed })}\n        htmlFor=\"todo-1\"\n      >\n        {todo.title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, changeTodoCompleted }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        changeTodoCompleted={changeTodoCompleted}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoList from './TodoList';\n\nclass TodoApp extends React.Component {\n  state = {\n    id: 0,\n    title: '',\n    completed: false,\n  };\n\n  getTitle = (event) => {\n    const { value } = event.target;\n\n    event.preventDefault();\n    this.setState({\n      title: value,\n    });\n  }\n\n  createTodo = (event) => {\n    event.preventDefault();\n\n    this.props.addTodo({\n      ...this.state,\n      id: Date.now(),\n    });\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const { todos, changeTodoCompleted } = this.props;\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.createTodo}>\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            onChange={this.getTitle}\n            value={title}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </header>\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n          />\n          {/* eslint-disable-next-line */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        </section>\n        <TodoList\n          todos={todos}\n          changeTodoCompleted={changeTodoCompleted}\n        />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addTodo: PropTypes.func.isRequired,\n  changeTodoCompleted: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      filterTodos: [],\n    };\n  }\n\n  addTodo = (todo) => {\n    this.setState(state => ({\n      todos: [...state.todos, todo],\n    }));\n  };\n\n  changeTodoCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id !== id\n          ? todo\n          : { ...todo, completed: !todo.completed }\n      )),\n    }));\n  };\n\n  destroyAllCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n      filterTodos: [],\n    }));\n  };\n\n  render() {\n    const { todos, filterTodos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n\n        <TodoApp\n          todos={todos}\n          addTodo={this.addTodo}\n          changeTodoCompleted={this.changeTodoCompleted}\n          filterTodos={filterTodos}\n        />\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {(todos.filter(todo => !todo.completed)).length}\n            <> items left</>\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button\n            onClick={this.destroyAllCompletedTodos}\n            type=\"button\"\n            className=\"clear-completed\"\n            style={this.state.todos\n              .some(todo => todo.completed)\n              ? { display: 'block' }\n              : { display: 'none' }}\n          >\n            Ð¡lear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}